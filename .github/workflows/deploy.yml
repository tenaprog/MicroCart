name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI using GitHub Secrets
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      # Step 3: Install Copilot CLI into ~/bin and export it into PATH
      - name: Install Copilot CLI
        run: |
          mkdir -p ~/bin
          curl -Lo ~/bin/copilot https://github.com/aws/copilot-cli/releases/download/v1.23.0/copilot-linux
          chmod +x ~/bin/copilot
          # Export ~/bin into PATH for this step (and subsequent steps in this job)
          export PATH="$HOME/bin:$PATH"
          echo "PATH is: $PATH"
          which copilot
          copilot --version
        shell: bash

      # Step 4: Initialize Copilot Application if not already initialized
      - name: Initialize Copilot Application
        run: |
          export PATH="$HOME/bin:$PATH"
          if ! copilot app ls | grep -q "microcart-app"; then
            echo "Initializing Copilot application..."
            copilot app init --name microcart-app || exit 1
          else
            echo "Copilot application 'microcart-app' already initialized."
          fi

      # Step 5: Check and Create Environment if not exists
      - name: Check and Create Environment
        run: |
          export PATH="$HOME/bin:$PATH"
          if ! copilot env ls --app microcart-app | grep -q "production"; then
            echo "Production environment not found. Creating production environment..."
            copilot env init --name production --app microcart-app --profile default || exit 1
          else
            echo "Production environment already exists."
          fi

      # Step 6: Create DynamoDB Tables for All Services
      - name: Create DynamoDB Table for User Service
        run: |
          aws dynamodb create-table \
            --table-name users \
            --attribute-definitions AttributeName=user_id,AttributeType=S \
            --key-schema AttributeName=user_id,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --region eu-north-1 || echo "Users table already exists"

      - name: Create DynamoDB Table for Product Service
        run: |
          aws dynamodb create-table \
            --table-name products \
            --attribute-definitions AttributeName=product_id,AttributeType=S \
            --key-schema AttributeName=product_id,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --region eu-north-1 || echo "Products table already exists"

      - name: Create DynamoDB Table for Cart Service
        run: |
          aws dynamodb create-table \
            --table-name carts \
            --attribute-definitions AttributeName=cart_id,AttributeType=S \
            --key-schema AttributeName=cart_id,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --region eu-north-1 || echo "Carts table already exists"

      # Step 7: Create S3 Bucket for Product Service
      - name: Create S3 Bucket for Product Service
        run: |
          aws s3 mb s3://microcart-products --region eu-north-1 || echo "S3 bucket already exists"

      # Step 8: Deploy Services with Copilot
      - name: Deploy Services with Copilot
        run: |
          export PATH="$HOME/bin:$PATH"
          copilot svc deploy --name user-service --env production
          copilot svc deploy --name product-service --env production
          copilot svc deploy --name cart-service --env production

      # Step 9: Output Deployment URLs
      - name: Output Deployment URLs
        run: |
          export PATH="$HOME/bin:$PATH"
          echo "User Service URL: https://$(copilot svc show --name user-service --env production | grep 'URL' | awk '{print $2}')"
          echo "Product Service URL: https://$(copilot svc show --name product-service --env production | grep 'URL' | awk '{print $2}')"
          echo "Cart Service URL: https://$(copilot svc show --name cart-service --env production | grep 'URL' | awk '{print $2}')"
          
      # Step 10: Confirm successful deployment
      - name: Deployment Complete
        run: echo "Deployment to AWS completed successfully!"
