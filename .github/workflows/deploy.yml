name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI and Copilot CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Install Copilot CLI
        run: |
          curl -Lo copilot https://github.com/aws/copilot-cli/releases/download/v1.23.0/copilot-linux && chmod +x copilot && mv copilot /usr/local/bin/copilot

      # Step 3: Initialize Copilot Application if not already initialized
      - name: Initialize Copilot Application
        run: |
          copilot init --app microcart-app --name user-service --type "Load Balanced Web Service" --dockerfile ./user_service/Dockerfile || echo "User Service already initialized"
          copilot init --app microcart-app --name product-service --type "Load Balanced Web Service" --dockerfile ./product_service/Dockerfile || echo "Product Service already initialized"
          copilot init --app microcart-app --name cart-service --type "Load Balanced Web Service" --dockerfile ./cart_service/Dockerfile || echo "Cart Service already initialized"

      # Step 4: Create DynamoDB Tables for All Services

      # Create DynamoDB Table for User Service
      - name: Create DynamoDB Table for User Service
        run: |
          aws dynamodb create-table \
            --table-name users \
            --attribute-definitions AttributeName=user_id,AttributeType=S \
            --key-schema AttributeName=user_id,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --region eu-north-1 || echo "Users table already exists"

      # Create DynamoDB Table for Product Service
      - name: Create DynamoDB Table for Product Service
        run: |
          aws dynamodb create-table \
            --table-name products \
            --attribute-definitions AttributeName=product_id,AttributeType=S \
            --key-schema AttributeName=product_id,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --region eu-north-1 || echo "Products table already exists"

      # Create DynamoDB Table for Cart Service
      - name: Create DynamoDB Table for Cart Service
        run: |
          aws dynamodb create-table \
            --table-name carts \
            --attribute-definitions AttributeName=cart_id,AttributeType=S \
            --key-schema AttributeName=cart_id,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --region eu-north-1 || echo "Carts table already exists"

      # Step 5: Create S3 Bucket for Product Service
      - name: Create S3 Bucket for Product Service
        run: |
          aws s3 mb s3://microcart-products --region eu-north-1 || echo "S3 bucket already exists"

      # Step 6: Deploy Services with Copilot (no need to specify environment, it uses default)
      - name: Deploy Services with Copilot
        run: |
          copilot svc deploy --name user-service
          copilot svc deploy --name product-service
          copilot svc deploy --name cart-service

      # Step 7: Output Deployment URLs
      - name: Output Deployment URLs
        run: |
          echo "User Service URL: https://$(copilot svc show --name user-service | grep 'URL' | awk '{print $2}')"
          echo "Product Service URL: https://$(copilot svc show --name product-service | grep 'URL' | awk '{print $2}')"
          echo "Cart Service URL: https://$(copilot svc show --name cart-service | grep 'URL' | awk '{print $2}')"
          
      # Step 8: Confirm successful deployment
      - name: Deployment Complete
        run: echo "Deployment to AWS completed successfully!"
